
  Name: .ADDSPRITE

  Uses Cocos2D to add a sprite to the screen. By default, the sprite usually appears right
  at the center of the screen.

  Parameters:

      #1: Sprite name (string) (example: "girl.png")
          Quite simply, the name of a file where the sprite is. Currently, the VN system doesn't
          support sprite sheets, so it needs to be a single image in a single file.

      #2: (OPTIONAL) Sprite appears at once? (Boolean value) (example: "NO") (default is NO)
          If set to YES, the sprite appears immediately (no fade-in). If set to NO, then the
          sprite "gradually" fades in (though the fade-in usually takes a second or less).

Example: .addsprite:girl.png:NO

================

  Name: .ALIGNSPRITE

  Aligns a particular sprite in either the center, left, or right ends of the screen. This is done
  by finding the center of the sprite and setting the X coordinate to either 25% of the screen's
  width (on the iPhone 4S, this is 480*0.25 or 120), 50% (the middle), or 75% (the right).

  There's also the Far Left (the left border of the screen), Far Right (the right border of the screen),
  and Extreme Left and Extremem Right, which are so far that the sprite is drawn offscreen.

  Parameters:

      #1: Name of sprite (string) (example: "girl.png")
          This is the name of the sprite to manipulate/align. All sprites currently displayed by the
          VN system are kept track of in the scene, so if the sprite exists onscreen, it'll be found.

      #2: Alignment name (string) (example: "left") (default is "center")
          (Other, more unusual values also include FAR LEFT, FAR RIGHT, EXTREME LEFT, EXTREME RIGHT)
          Determines whether to move the sprite to the LEFT, CENTER, or RIGHT of the screen.

          It has to be one of those values; partial/percentage values aren't supported.

      #2: (OPTIONAL) Alignment duration in SECONDS (double value) (example: "0.5") (Default is 0.5)
          Determines how long it takes for the sprite to move from its current position to the
          new position. Setting it to zero makes the transition instant. Time is measured in seconds.

  Example: .alignsprite:girl.png:center

================

  Name: .REMOVESPRITE

  Removes a sprite from the screen, assuming that it's part of the VN system's dictionary of
  existing sprite objects.

  Parameters:

      #1: Name of sprite (string) (example: "girl.png")
          This is the name of the sprite to manipulate/align. All sprites currently displayed by the
          VN system are kept track of in the scene, so if the sprite exists onscreen, it'll be found.

      #2: (OPTIONAL) Sprite appears at once (Boolean value) (example: "NO") (Default is NO)
          Determines whether the sprite disappears from the screen instantly or fades out gradually.

  Example: .removesprite:girl.png:NO

================

  Name: .MOVESPRITE

  Uses Cocos2D actions to move a sprite by a certain number of points.

  Parameters:

   (note that all parameters after the first are TECHNICALLY optional, but if you use one,
    you had better call the ones that come before it!)

      #1: The name of the sprite to move (string) (example: "girl.png")

      #2: Amount to move sprite by X points (float) (example: 128) (default is ZERO)

      #3: Amount to move the sprite by Y points (float) (example: 256) (default is ZERO)

      #4: Duration in seconds (float) (example: 0.5) (default is 0.5 seconds)
          This measures how long it takes to move the sprite, in seconds.

  Example: .movesprite:girl.png:128:-128:1.0

================

  Name: .SETSPRITEPOSITION

  NOTE that unlike .MOVESPRITE, this call is instantaneous. I don't remember why I made it that
  way (probably since sprites usually don't move instantly in most visual novels), but it's probably
  best to keep things simple like that anyways.

  Parameters:

      #1: The name of the sprite (string) (example: "girl.png")

      #2: The sprite's X coordinate, in points (float) (example: 10)

      #3: The sprite's Y coordinate, in points (float) (example: 10)

  Example: .setspriteposition:girl.png:100:100


================

  Name: .SETBACKGROUND

  Changes whatever image (if any) is used as the background. You can set this to 'nil' which removes
  the background entirely, and shows whatever is behind. This is useful if you're overlaying the VN
  scene over an existing Cocos2D layer/scene node.

  Unlike some of the other image-switching commands, this one is supposed to do the change instantly.
  It might be helpful to fade-out and then fade-in the scene during transistions so that the background
  change isn't too jarring for the person playing the game.

  Parameters:

      #1: The name of the background image (string) (example: "beach.png")

  Example: .setbackground:beach.png

================

  Name: .MOVEBACKGROUND

  Uses Cocos2D actions to move the background by a certain number of points. This is normally used to
  pan the background (along the X-axis), but you can move the background up and down as well. Character
  sprites can also be moved along with the background, though usually at a slightly different rate;
  the rate is referred to as the "parallax factor." A parallax factor of 1.0 means that the character
  sprites move just as quickly as the background does, while a factor 0.0 means that the character
  sprites do not move at all.

  Parameters:

      #1: Amount to move sprite by X points (float) (example: 128) (default is ZERO)

      #2: Amount to move the sprite by Y points (float) (OPTIONAL) (example: 256) (default is ZERO)

      #3: Duration in seconds (float) (OPTIONAL) (example: 0.5) (default is 0.5 seconds)
          This measures how long it takes to move the sprite, in seconds.

      #4: Parallax factor (float) (OPTIONAL) (example: 0.5) (default is 0.95)
          The rate at which sprites move compared to the background. 1.00 means that the
          sprites move at exactly the same rate as the background, while 0.00 means that
          the sprites do not move at all. You'll probably want to set it something in between.

  Example: .MOVEBACKGROUND:100:0:1.0:0.99


================

  Name: .SETSPEAKER

  The "speaker name" is the title of the person speaking. If you set this to "nil" then it
  removes whatever the previous speaker name was.

  Parameters:

      #1: The name of the character speaking (string) (example: "Harry Potter")

  Example: .setspeaker:John Smith


================

  Name: .SETCONVERSATION

  This jumps to a new conversation. The beginning conversation name is "start" and the other
  arrays in the script's Property List represent other conversations.

  Parameters:

      #1: The name of the conversation/array to switch to (string) (example: "flirt sequence")

  Example: .setconversation:flirt sequence
 

================

  Name: .JUMPONCHOICE

  This presents the player with multiple choices. Each choice causes the scene to jump to a different
  "conversation" (or rather, an array in the script dictionary). The function can have multipe parameters,
  but the number should always be even-numbered.

  Parameters:

      #1: The name of the first action (shows up on button when player decides) (string) (example: "Run away")

      #2: The name of the conversation to jump to (string) (example: "fleeing sequence")

      ...these variables can be repeated multiple times.

  Example: .JUMPONCHOICE:"Hug someone":hug sequence:"Glomp someone":glomp sequence


================

  Name: .SHOWSPEECH

  Determines whether or not to show the speech (and accompanying speech-box or speech-area). You
  can set it to NO if you don't want any text to show up.

  Parameters:

      #1: Whether or not to show the speech box (BOOL value)

  Example: .SHOWSPEECH:NO


================

  Name: .FADEIN

  Uses Cocos2D to fade-out the VN scene's backgrounds and sprites... and nothing else (UI
  elements like speech text are unaffected).

  Parameters:

      #1: Duration of fade-in sequence, in seconds (double)

  Example: .FADEIN:0.5


================

  Name: .FADEOUT

  Uses Cocos2D to fade-out the VN scene's backgrounds and sprites... and nothing else (UI
  elements like speech text are unaffected).

  Parameters:

      #1: Duration of fade-out sequence, in seconds (double)

  Example: .FADEOUT:1.0


================

  Name: .PLAYSOUND

  Plays a sound (any type of sound file supported by Cocos2D/SimpleAudioEngine)

  Parameters:

      #1: name of sound file (string)

  Example: .PLAYSOUND:effect1.caf


================

  Name: .PLAYMUSIC

  Plays background music. May or may not loop. You can also stop any background music
  by calling this with the parameter set to "nil"

  Parameters:

      #1: name of music filename (string)
          (you can write "nil" to stop all the music)

      #2: (Optional) Should this loop forever? (BOOL value) (default is YES)

      #3: Fade-in/fade-out duration (in seconds) (optional)

  Example: .PLAYMUSIC:LevelUpper.mp3:NO:1.0

================

  Name: .SETFLAG

  Used to manually set a "flag" value in the VN system.

  Parameters:

      #1: Name of flag (string)

      #2: The value to set the flag to (integer)

  Example: .SETFLAG:number of friends:12


================

  Name: .MODIFYFLAG

  Modifies a flag (which stores a numeric, integer value) by another integer. The catch is,
  the modifying value has to be a "literal" number value, and not another flag/variable.

  Parameters:

      #1: Name of the flag/variable to modify (string)

      #2: The number to modify the flag by (integer)

  Example: .MODIFYFLAG:number of friends:1


================

  Name: .ISFLAG

  Checks if a flag matches a certain value. If it does, then it immediately runs another command.
  In theory, you could probably even nest .ISFLAG commands inside each other, but I've never tried
  this before.

  Parameters:

      #1: Name of flag (string)

      #2: Expected value (integer)

      #3: Another command

  Example: .ISFLAG:number of friends:1:.SETSPEAKER:That One Friend You Have


================

  Name: .ISFLAGMORETHAN

  Checks if a flag's value is GREATER than a given value. If it is, then a secondary command is run.

  Parameters:

      #1: Name of flag (string)

      #2: Certain number (integer)

      #3: Another command

  Example: .ISFLAGMORETHAN:power level:9000:.PLAYSOUND:over nine thousand.mp3


================

  Name: .ISFLAGLESSTHAN

  Checks if a flag's value is LESS than a certain number. If it is, then a secondary command is run.

  Parameters:

      #1: Name of flag (string)

      #2: Certain number (integer)

      #3: Another command

  Example: .ISFLAGLESSTHAN:time remaining:0:.PLAYMUSIC:time's up.mp3


================

  Name: .ISFLAGBETWEEN

  Checks if a flag's value is between two numbers, and if it is, this will run another command.

  Parameters:

      #1: Name of flag (string)

      #2: First number (integer)

      #3: Second number (integer)

      #4: Another command

  Example: .ISFLAGBETWEEN:number of cookies:1:3:YOU HAVE EXACTLY TWO COOKIES!


================

  Name: .MODIFYFLAGBYCHOICE

  This presents a choice menu. Each choice causes a particular flag/variable to be changed
  by a particular integer value.

  Parameters:

      #1: The text that will appear on the choice (string)

      #2: The name of the flag/variable to be modified (string)

      #3: The amount to modify the flag/variable by (integer)

      ...these variables can be repeated multiple times.

  Example: .MODIFYFLAGBYCHOICE:"Be nice":niceness:1:"Be rude":niceness:-1


================

  Name: .JUMPONFLAG

  If a particular flag has a particular value, then this command will jump to a different
  conversation/dialogue-sequence in the script.

  Parameters:

      #1: The name of the flag to be checked (string)

      #2: The expected value of the flag (integer)

      #3: The scene to jump to, if the flag's vaue matches the expected value in parameter #2 (string)

  Example: .JUMPONFLAG:should jump to beach scene:1:BeachScene


================

  Name: .SYSTEMCALL

  Used to do a "system call," which is usually game-specific. This command will try to contact the
  VNSystemCall class, and use it to perform some kind of particular task. Some examples of this would
  be starting a mini-game or some other activity that's specific to a particular app.

  Parameters:

      #1: The "call string" or a string that described what the activity/system-call type will be (string)

      #2: (OPTIONAL) The first parameter to pass in to the system call (string?)

      ...more parameters can be passed in as necessary

  Example: .SYSTEMCALL:start-bullet-hell-minigame:BulletHellLevel01



================

  Name: .CALLCODE

  This action can be used to call functions (usually from static objects). Careful when using it to
  call classes or functions that the VN system doesn't have access to! You may need to include header
  files from certain places if you really want to use certain classes.

  Parameters:

      #1: The name of the class to call (string)

      #2: The name of a static function to call (string)

		#3: (OPTIONAL) The name of another function, PRESUMABLY a function that belongs to the class
			instance that was returned by the function called in #2 (string)

		#4: (OPTIONAL) A parameter to pass into the function called in #3 (string?)

  Example: .CALLCODE:EKRecord:sharedRecord:flagNamed:times played

================

  Name: .SWITCHSCRIPT

  Replaces a scene's script with a script loaded from another .PLIST file. This is useful if your script is
  split up between multiple .PLIST files.

  Parameters:

      #1: The name of the .PLIST file to load (string)

      #2: (OPTIONAL) The name of the "conversation"/array to start at to (string) (default is "start")

  Example: .SWITCHSCRIPT:my other script:Some Random Event

================

  Name: .SETSPEAKERFONT

  Replaces the current font used by the "speaker name" label with another font.

  Parameters:

      #1: The name of the font to use (string)

  Example: .SETSPEAKERFONT:Helvetica

================

  Name: .SETSPEAKERFONTSIZE

  Changes the font size used by the "speaker name" label.

  Parameters:

      #1: Font size (float)

  Example: .SETSPEAKERFONTSIZE:17.0

================

  Name: .SETSPEECHFONT

  Replaces the current font used by the speech/dialogue label with another font.

  Parameters:

      #1: The name of the font to use (string)

  Example: .SETSPEECHFONT:Courier New

================

  Name: .SETSPEECHFONTSIZE

  Changes the speech/dialogue font size.

  Parameters:

      #1: Font size (float)

  Example: .SETSPEECHFONTSIZE:18.0

================

  Name: .SETCINEMATICTEXT

  Sets (or disables) "cinematic text," in which text or dialogue proceeds without any input
  from the player.

  Parameters:

      #1: The time it takes (in seconds) to get to the next line of text/dialogue. (double)
          (Setting this to zero (or less) DISABLES cinematic text mode.)

      #2: Whether the user can still skip ahead by tapping the screen (BOOL) (OPTIONAL)
          (default value is NO)

  Example: .SETCINEMATICTEXT:5.0:YES

================

  Name: .SETTYPEWRITERTEXT

  Sets or disables "typewriter text" mode, in which each character of text/dialogue appears
  one at a time (though usually still very quickly).

  Parameters:

      #1: How many characters it should print per second (Integer)
          (setting this to zero disables typewriter text mode)

      #2: Whether the user can still skip ahead by tapping the screen (BOOL) (default value is NO)

  Example: .SETTYPEWRITERTEXT:30:NO

================

  Name: .SETSPEECHBOX

  Dynamically switches to a different speechbox sprite.

  Parameters:

      #1: Name of speechbox sprite to use (string)

      #2: (OPTIONAL) Duration of transition, in seconds) (double)
          (default is 0, which is instant)

  Example: .SETSPEECHBOX:alternate_box.png:1.0
================

  Name: .FLIPSPRITE

  Flips the sprite left/right or upside-down/right-side-up.

  Parameters:

      #1: Name of sprite (string)

      #2: (OPTIONAL) Duration in seconds. Duration of zero is instantaneous. (double)

      #3: (OPTIONAL) Whether to flip horizontally or not (BOOL)
          (YES means horizontal flip, NO means vertical flip)

  Example: .FLIPSPRITE:girl.png:0:YES

================

  Name: .ROLLDICE

  Rolls dice to get random result, stores value in a flag named DICEROLL. A flag (holding an integer value)
  can be added as a "modifier." Whatever the value the flag has is added to the final result of the dice roll.

  Parameters:

      #1: Maximum value of roll; possible results = from 1 to (max value) (int)

      #2: (OPTIONAL) Number of dice, default is 1 (int)

      #3: (OPTIONAL) Name of flag, adds integer value in flag to final result (string)
          (default is ".nil")

  Example: .ROLLDICE:20:1:luck_modifier

================

  Name: .MODIFYCHOICEBOXOFFSET

  Modifies button offsets during choices, in case you don't want them to show up in the middle of the screen.

  Parameters:

      #1: X coordinate (in points) (double)

      #2: Y coordinate (in points) (double)

  Example: .MODIFYCHOICEBOXOFFSET:10:10

================

  Name: .SCALEBACKGROUND

  Changes background scale (1.0 being the "normal" scale)

  Parameters:

      #1: Scale (1.0 is normal) (double)

      #2: (OPTIONAL) Duration in seconds; 0 results in instantaneous scaling (double)

  Example: .SCALEBACKGROUND:2.5:1

================

  Name: .SCALESPRITE

  Changes sprite scale (1.0 being the "normal" scale)

  Parameters:

      #1: Name of sprite (string)

      #2: Scale (default is 1.0) (double)

      #3: (OPTIONAL) Duration in seconds; 0 results in instantaneous scaling (double)

  Example: .SCALESPRITE:girl.png:2:1.5

================